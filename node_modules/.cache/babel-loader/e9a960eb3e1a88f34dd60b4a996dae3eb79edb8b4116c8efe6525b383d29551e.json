{"ast":null,"code":"var _jsxFileName = \"D:\\\\ToDo List\\\\to-do-list\\\\src\\\\ToDoLists.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoLists = props => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(props.next);\n  const [newDescription, setDescription] = use(props.description);\n  const handleUpdate = () => {\n    props.onUpdate(props.id, title, description);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo_style\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        onClick: () => props.onDelete(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textDecoration: props.completed ? \"line-through\" : \"none\"\n          },\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.onComplete(props.id),\n          children: props.completed ? \"Undo\" : \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsEditing(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ToDoLists, \"AfG/RMbmO43NC0TEh7hUQBNPwkU=\");\n_c = ToDoLists;\nexport default ToDoLists;\nvar _c;\n$RefreshReg$(_c, \"ToDoLists\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoLists","props","_s","isEditing","setIsEditing","title","setTitle","next","newDescription","setDescription","use","description","handleUpdate","onUpdate","id","children","className","onClick","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","style","textDecoration","completed","text","onComplete","_c","$RefreshReg$"],"sources":["D:/ToDo List/to-do-list/src/ToDoLists.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ToDoLists = (props) =>{\r\n    const [isEditing,setIsEditing]=useState(false);\r\n    const[title,setTitle]=useState(props.next);\r\n    const[newDescription,setDescription]=use(props.description);\r\n    \r\n    const handleUpdate=()=>{\r\n        props.onUpdate(props.id,title,description);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return(\r\n         <>\r\n      <div className=\"todo_style\">\r\n        <i\r\n          className=\"fa fa-times\"\r\n          aria-hidden=\"true\"\r\n          onClick={() => props.onDelete(props.id)}\r\n        />\r\n        {isEditing ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <button onClick={handleUpdate}>Save</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <li style={{ textDecoration: props.completed ? \"line-through\" : \"none\" }}>\r\n              {props.text}\r\n            </li>\r\n            <p>{props.description}</p>\r\n            <button onClick={() => props.onComplete(props.id)}>\r\n              {props.completed ? \"Undo\" : \"Complete\"}\r\n            </button>\r\n            <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ToDoLists;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}